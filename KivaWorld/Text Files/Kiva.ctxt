#BlueJ class context
comment0.target=Kiva
comment0.text=\r\n\ This\ Kiva\ class\ contains\ the\ floor\ map\ along\ with\ \r\n\ instance\ variables\ and\ getter\ methods\ for\ making\ moves.\r\n\ @author\ (James)\ \r\n
comment1.params=map
comment1.target=Kiva(FloorMap)
comment1.text=\r\n\ Kiva\ robot\ instance\ using\ a\ FloorMap.\r\n\ It\ includes\ the\ starting\ location\ of\ \r\n\ the\ robot,\ location\ of\ the\ boundaries,\ obstacles,\ pod\ and\ drop-zone.\r\n
comment10.params=
comment10.target=void\ incrementMotorLifetime()
comment10.text=\r\n\ Adds\ 1000\ milliseconds\ (1\ second)\ to\ the\ motorLifetime\r\n
comment11.params=
comment11.target=edu.duke.Point\ getCurrentLocation()
comment11.text=\r\n\ Returns\ the\ current\ location\ of\ the\ Kiva\ object\r\n\ in\ the\ form\ of\ x,\ y\ coordianate.\r\n
comment12.params=
comment12.target=FacingDirection\ getDirectionFacing()
comment12.text=\r\n\ Returns\ the\ direction\ that\ the\ Kiva\ object\ is\ facing\ on\ the\ map\:\r\n\ UP,\ DOWN,\ LEFT,\ RIGHT.\r\n
comment13.params=
comment13.target=FloorMap\ getMap()
comment13.text=\r\n\ Returns\ the\ map\ which\ the\ robot\ is\ using\ to\ navigate.\r\n
comment14.params=
comment14.target=boolean\ isCarryingPod()
comment14.text=\r\n\ Returns\ true\ if\ robot\ is\ carrying\ the\ pod\ and\ false\ if\ not.\r\n
comment15.params=
comment15.target=boolean\ isSuccessfullyDropped()
comment15.text=\r\n\ Returns\ true\ if\ robot\ successfully\ dropped\ the\ pod\ and\ false\ if\ not.\r\n
comment16.params=
comment16.target=long\ getMotorLifetime()
comment16.text=\r\n\ Returns\ the\ motorLifetime\ utilized\ by\ the\ Kiva,\ measured\ in\ milliseconds.\r\n
comment2.params=map\ currentLocation
comment2.target=Kiva(FloorMap,\ edu.duke.Point)
comment2.text=\r\n\ \r\n\ Kiva\ robot\ instance\ using\ a\ @param\ FloorMap\ and\ a\ Point\ to\ set\ \r\n\ the\ starting\ location\ (currentLocation)\ of\ the\ robot.\r\n\ Includes\ the\ locations\ of\ the\ Kiva\ robot,\ \r\n\ drop-zone,\ obstacles,\ pod,\ and\ boundaries.\r\n
comment3.params=command
comment3.target=void\ move(KivaCommand)
comment3.text=\r\n\ The\ @param\ KivaCommand\ the\ robot\ receives,\ the\ move\ method\ will\ update\ the\ \r\n\ current\ location\ and\ the\ direction\ the\ robot\ is\ facing.\ \r\n\ Method\ also\ determines\ whether\ the\ robot\ is\ carrying\ a\ pod\ or\ if\ it\ has\ been\ dropped.\r\n\ The\ parameter\ command\ KivaCommand\ that\ indicates\ the\ specific\ movement\ the\ \r\n\ Kiva\ robot\ should\ perform\:\ forward,\ turn\ left,\ turn\ right,\ take,\ or\ drop.\r\n
comment4.params=
comment4.target=void\ moveForward()
comment5.params=newLoc\ mapObj
comment5.target=void\ handleExceptions(edu.duke.Point,\ FloorMapObject)
comment6.params=
comment6.target=void\ turnLeft()
comment6.text=\r\n\ Robot's\ direction\ will\ turn\ to\ the\ left.\ \ \r\n
comment7.params=
comment7.target=void\ turnRight()
comment7.text=\r\n\ Kiva\ object's\ direction\ will\ turn\ to\ the\ right.\ \r\n
comment8.params=
comment8.target=void\ take()
comment8.text=\r\n\ Kiva\ method\ for\ taking\ a\ pod.\ \r\n\ Method\ will\ throw\ a\ NoPodException\ if\ robot\ is\ already\ holding\ a\ pod\ \r\n\ or,\ if\ there\ is\ no\ pod\ at\ currentLocation.\r\n
comment9.params=
comment9.target=void\ drop()
comment9.text=\r\n\ Kiva\ method\ for\ dropping\ a\ pod.\ \r\n\ This\ will\ throw\ a\ IllegalMoveException\ if\ it\ is\ not\ holding\ a\ pod\ at\ the\ \r\n\ time\ of\ the\ drop\ or,\ an\ IllegalDropZoneException\ if\ it\ is\ not\ \r\n\ at\ a\ drop-zone\ location.\r\n
numComments=17
